// <auto-generated />
using Evacuation_Planning_and_Monitoring_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Evacuation_Planning_and_Monitoring_API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Evacuation_Planning_and_Monitoring_API.Models.EvacuationZone", b =>
                {
                    b.Property<string>("ZoneID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<int>("UrgencyLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("ZoneID");

                    b.ToTable("EvacuationZones");
                });

            modelBuilder.Entity("Evacuation_Planning_and_Monitoring_API.Models.Vehicle", b =>
                {
                    b.Property<string>("VehicleID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehicleID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Evacuation_Planning_and_Monitoring_API.Models.EvacuationZone", b =>
                {
                    b.OwnsOne("Evacuation_Planning_and_Monitoring_API.Models.LocationCoordinates", "LocationCoordinates", b1 =>
                        {
                            b1.Property<string>("EvacuationZoneZoneID")
                                .HasColumnType("nvarchar(10)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("EvacuationZoneZoneID");

                            b1.ToTable("EvacuationZones");

                            b1.WithOwner()
                                .HasForeignKey("EvacuationZoneZoneID");
                        });

                    b.Navigation("LocationCoordinates")
                        .IsRequired();
                });

            modelBuilder.Entity("Evacuation_Planning_and_Monitoring_API.Models.Vehicle", b =>
                {
                    b.OwnsOne("Evacuation_Planning_and_Monitoring_API.Models.LocationCoordinates", "LocationCoordinates", b1 =>
                        {
                            b1.Property<string>("VehicleID")
                                .HasColumnType("nvarchar(10)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("VehicleID");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleID");
                        });

                    b.Navigation("LocationCoordinates")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
